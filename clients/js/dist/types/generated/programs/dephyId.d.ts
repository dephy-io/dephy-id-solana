/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */
import { type Address, type ReadonlyUint8Array } from '@solana/web3.js';
import { type ParsedActivateDeviceInstruction, type ParsedCreateActivatedDeviceInstruction, type ParsedCreateActivatedDeviceNonSignerInstruction, type ParsedCreateDeviceInstruction, type ParsedCreateProductInstruction, type ParsedInitializeInstruction } from '../instructions';
export declare const DEPHY_ID_PROGRAM_ADDRESS: Address<"hdMghjD73uASxgJXi6e1mGPsXqnADMsrqB1bveqABP1">;
export declare enum DephyIdAccount {
    ProgramDataAccount = 0
}
export declare function identifyDephyIdAccount(account: {
    data: ReadonlyUint8Array;
} | ReadonlyUint8Array): DephyIdAccount;
export declare enum DephyIdInstruction {
    Initialize = 0,
    CreateProduct = 1,
    CreateDevice = 2,
    ActivateDevice = 3,
    CreateActivatedDevice = 4,
    CreateActivatedDeviceNonSigner = 5
}
export declare function identifyDephyIdInstruction(instruction: {
    data: ReadonlyUint8Array;
} | ReadonlyUint8Array): DephyIdInstruction;
export type ParsedDephyIdInstruction<TProgram extends string = 'hdMghjD73uASxgJXi6e1mGPsXqnADMsrqB1bveqABP1'> = ({
    instructionType: DephyIdInstruction.Initialize;
} & ParsedInitializeInstruction<TProgram>) | ({
    instructionType: DephyIdInstruction.CreateProduct;
} & ParsedCreateProductInstruction<TProgram>) | ({
    instructionType: DephyIdInstruction.CreateDevice;
} & ParsedCreateDeviceInstruction<TProgram>) | ({
    instructionType: DephyIdInstruction.ActivateDevice;
} & ParsedActivateDeviceInstruction<TProgram>) | ({
    instructionType: DephyIdInstruction.CreateActivatedDevice;
} & ParsedCreateActivatedDeviceInstruction<TProgram>) | ({
    instructionType: DephyIdInstruction.CreateActivatedDeviceNonSigner;
} & ParsedCreateActivatedDeviceNonSignerInstruction<TProgram>);
//# sourceMappingURL=dephyId.d.ts.map